# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""

import datetime
import unittest

from scicat_openapi_client.models.measurement_period_class import \
    MeasurementPeriodClass  # noqa: E501


def make_instance(include_optional):
    """Test MeasurementPeriodClass
        include_option is a boolean, when False only required
        params are included, when True both required and
        optional params are included """
    if include_optional:
        return MeasurementPeriodClass(
            created_by='ingestor',
            updated_by='ingestor',
            created_at=datetime.datetime.strptime(
                '2013-10-20 19:20:30.00',
                '%Y-%m-%d %H:%M:%S.%f'),
            updated_at=datetime.datetime.strptime(
                '2013-10-20 19:20:30.00',
                '%Y-%m-%d %H:%M:%S.%f'),
            instrument='',
            start=datetime.datetime.strptime(
                '2013-10-20 19:20:30.00',
                '%Y-%m-%d %H:%M:%S.%f'),
            end=datetime.datetime.strptime(
                '2013-10-20 19:20:30.00',
                '%Y-%m-%d %H:%M:%S.%f'),
            comment='Comment'
        )
    else:
        return MeasurementPeriodClass(
            created_by='ingestor',
            updated_by='ingestor',
            created_at=datetime.datetime.strptime(
                '2013-10-20 19:20:30.00',
                '%Y-%m-%d %H:%M:%S.%f'),
            updated_at=datetime.datetime.strptime(
                '2013-10-20 19:20:30.00',
                '%Y-%m-%d %H:%M:%S.%f'),
            instrument='',
            start=datetime.datetime.strptime(
                '2013-10-20 19:20:30.00',
                '%Y-%m-%d %H:%M:%S.%f'),
            end=datetime.datetime.strptime(
                '2013-10-20 19:20:30.00',
                '%Y-%m-%d %H:%M:%S.%f'),
            comment='Comment',
        )


class TestMeasurementPeriodClass(unittest.TestCase):
    """MeasurementPeriodClass unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def testRequiredMeasurementPeriodClass(self):
        """Test MeasurementPeriodClass"""
        make_instance(include_optional=False)

    def testOptionalMeasurementPeriodClass(self):
        """Test MeasurementPeriodClass"""
        make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
