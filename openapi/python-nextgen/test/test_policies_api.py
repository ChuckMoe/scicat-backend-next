# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""

import unittest

import scicat_openapi_client
from scicat_openapi_client.api.policies_api import PoliciesApi  # noqa: E501
from test import api_client, login, logout
from test.test_create_policy_dto import \
    make_instance as make_instance_policy_create
from test.test_update_policy_dto import \
    make_instance as make_instance_policy_update
from test.test_update_where_policy_dto import \
    make_instance as make_instance_where_policy


class TestPoliciesApi(unittest.TestCase):
    """PoliciesApi unit test stubs"""

    @classmethod
    def setUpClass(cls):
        cls.api = scicat_openapi_client.api.policies_api.PoliciesApi(
            api_client)  # noqa: E501
        login(cls.api, 'admin')

    @classmethod
    def tearDownClass(cls):
        logout(cls.api)

    def setUp(self):
        self.policy = self.api.policies_controller_create(
            make_instance_policy_create(False))

    def test_policies_controller_count(self):
        """Test case for policies_controller_count

        """
        self.api.policies_controller_count('{}')

    def test_policies_controller_create(self):
        """Test case for policies_controller_create

        """
        self.api.policies_controller_create(
            make_instance_policy_create(False))

    def test_policies_controller_find_all(self):
        """Test case for policies_controller_find_all

        """
        self.api.policies_controller_find_all()

    def test_policies_controller_find_one(self):
        """Test case for policies_controller_find_one

        """
        self.api.policies_controller_find_one(self.policy.id)

    def test_policies_controller_remove(self):
        """Test case for policies_controller_remove

        """
        self.api.policies_controller_remove(self.policy.id)

    def test_policies_controller_update(self):
        """Test case for policies_controller_update

        """
        self.api.policies_controller_update(
            self.policy.id,
            make_instance_policy_update(False)
        )

    def test_policies_controller_update_where(self):
        """Test case for policies_controller_update_where

        """
        self.api.policies_controller_update_where(
            make_instance_where_policy(False)
        )


if __name__ == '__main__':
    unittest.main()
