# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""

import unittest

import scicat_openapi_client
from scicat_openapi_client import CreateCustomJwt
from scicat_openapi_client.api.users_api import UsersApi  # noqa: E501
from test import api_client, login, logout
from test.test_create_user_settings_dto import \
    make_instance as make_instance_user_create
from test.test_update_user_settings_dto import \
    make_instance as make_instance_user_update


class TestUsersApi(unittest.TestCase):
    """UsersApi unit test stubs"""

    @classmethod
    def setUpClass(cls):
        cls.api = scicat_openapi_client.api.users_api.UsersApi(api_client)
        login(cls.api, 'admin')
        cls.user_id = cls.api.users_controller_get_my_user()['id']

    @classmethod
    def tearDownClass(cls):
        logout(cls.api)

    def test_users_controller_can_user_create_dataset(self):
        """Test case for users_controller_can_user_create_dataset

        """
        self.api.users_controller_can_user_create_dataset(self.user_id)

    def test_users_controller_create_custom_jwt(self):
        """Test case for users_controller_create_custom_jwt

        It creates a new jwt token for the user specified.  # noqa: E501
        """
        self.api.users_controller_create_custom_jwt(
            self.user_id,
            CreateCustomJwt()
        )

    def test_users_controller_create_settings(self):
        """Test case for users_controller_create_settings

        """
        self.api.users_controller_create_settings(
            self.user_id,
            make_instance_user_create(False)
        )

    def test_users_controller_find_by_id(self):
        """Test case for users_controller_find_by_id

        """
        self.api.users_controller_find_by_id(self.user_id)

    def test_users_controller_get_my_settings(self):
        """Test case for users_controller_get_my_settings

        """
        self.api.users_controller_get_my_settings()

    def test_users_controller_get_my_user(self):
        """Test case for users_controller_get_my_user

        Returns the information of the user currently logged in.  # noqa: E501
        """
        self.api.users_controller_get_my_user()

    def test_users_controller_get_my_user_identity(self):
        """Test case for users_controller_get_my_user_identity

        """
        self.api.users_controller_get_my_user_identity()

    def test_users_controller_get_settings(self):
        """Test case for users_controller_get_settings

        """
        self.api.users_controller_get_settings(self.user_id)

    def test_users_controller_get_user_identity(self):
        """Test case for users_controller_get_user_identity

        """
        self.api.users_controller_get_user_identity(self.user_id)

    def test_users_controller_get_user_jwt(self):
        """Test case for users_controller_get_user_jwt

        It creates a new jwt token.  # noqa: E501
        """
        self.api.users_controller_get_user_jwt()

    def test_users_controller_patch_settings(self):
        """Test case for users_controller_patch_settings

        """
        self.api.users_controller_patch_settings(self.user_id)

    def test_users_controller_remove_settings(self):
        """Test case for users_controller_remove_settings

        """
        self.api.users_controller_patch_settings(self.user_id)

    def test_users_controller_update_settings(self):
        """Test case for users_controller_update_settings

        """
        self.api.users_controller_update_settings(
            self.user_id,
            make_instance_user_update(False)
        )


if __name__ == '__main__':
    unittest.main()
