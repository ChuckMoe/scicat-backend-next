# coding: utf-8

"""
    SciCat backend API

    This is the API for the SciCat Backend  # noqa: E501

    The version of the OpenAPI document: 4.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""

import unittest

import scicat_openapi_client
from scicat_openapi_client.api.elastic_search_api import \
    ElasticSearchApi  # noqa: E501
from test import api_client, login, logout
from test.test_search_dto import make_instance as make_instance_search_create


class TestElasticSearchApi(unittest.TestCase):
    """ElasticSearchApi unit test stubs"""

    index = 'dataset'

    @classmethod
    def setUpClass(cls):
        cls.api = (scicat_openapi_client.api.elastic_search_api
        .ElasticSearchApi(
            api_client))  # noqa: E501
        login(cls.api, 'admin')
        cls.api.elastic_search_service_controller_create_index(
            index=cls.index)

    @classmethod
    def tearDownClass(cls):
        logout(cls.api)

    def test_elastic_search_service_controller_create_index(self):
        """Test case for elastic_search_service_controller_create_index

        """
        self.api.elastic_search_service_controller_create_index(
            index='sample')

    def test_elastic_search_service_controller_delete_index(self):
        """Test case for elastic_search_service_controller_delete_index

        """
        self.api.elastic_search_service_controller_delete_index(
            index=self.index)

    def test_elastic_search_service_controller_fetch_es_results(self):
        """Test case for elastic_search_service_controller_fetch_es_results

        """
        search = make_instance_search_create(False)
        self.api.elastic_search_service_controller_fetch_es_results(search)

    def test_elastic_search_service_controller_get_index(self):
        """Test case for elastic_search_service_controller_get_index

        """
        self.api.elastic_search_service_controller_get_index(self.index)

    def test_elastic_search_service_controller_sync_database(self):
        """Test case for elastic_search_service_controller_sync_database

        """
        self.api.elastic_search_service_controller_sync_database(
            index=self.index)

    def test_elastic_search_service_controller_update_index(self):
        """Test case for elastic_search_service_controller_update_index

        """
        self.api.elastic_search_service_controller_update_index(
            index=self.index)


if __name__ == '__main__':
    unittest.main()
